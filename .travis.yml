#
# http://travis-ci.org configuration file for openMVG
#

dist: trusty
sudo: false

language: cpp

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - ubuntu-sdk-team/ppa
          packages:
            - g++-4.8
            - qtbase5-dev
            - libqt5svg5-dev
            - libqt5opengl5-dev
      env:
        - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"

    # works on macOS 10.13
    - os: osx
      osx_image: xcode9.4

    # works on macOS 10.14
    - os: osx
      osx_image: xcode10.2

    - os: osx
      osx_image: xcode11

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

  allow_failures:
    - os: osx
      osx_image: xcode11
      addons:
        homebrew:
          packages:
          - gcc@5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: osx
      osx_image: xcode10.2
      addons:
        homebrew:
          packages:
          - gcc@5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: osx
      osx_image: xcode10.2
      addons:
        homebrew:
          packages:
          - gcc@7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    # allowed to fail: an exact topy is below in allow_failures
    # watching for Apple updates.
    # there are problems with GCC including new but nonstandard Apple .h
    # https://github.com/Homebrew/homebrew-core/issues/40676
    - os: osx
      osx_image: xcode11
      addons:
        homebrew:
          packages:
          - gcc@5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake
      - libpng-dev
      - libjpeg8-dev
      - libtiff4-dev
      - libxxf86vm1
      - libxxf86vm-dev
      - x11proto-xf86vidmode-dev
      - libxrandr-dev

before_install:
    - eval "${MATRIX_EVAL}"

env:
  global:
    - OPENMVG_SOURCE=${TRAVIS_BUILD_DIR}/src
    - OPENMVG_BUILD=${TRAVIS_BUILD_DIR}/build

before_script:
  # Display cmake version
  - cmake --version
  # Create build folder
  - rm -rf $OPENMVG_BUILD
  - mkdir $OPENMVG_BUILD
  - cd $OPENMVG_BUILD
  # Classic release build
  #  - Compile only OpenMVG core libraries for unit testing
  #  - SCHUR_SPECIALIZATIONS set to OFF to speed up build time (ceres)
  - >
    cmake \
      -DCMAKE_BUILD_TYPE=release \
      -DOpenMVG_BUILD_TESTS=ON \
      -DOpenMVG_BUILD_EXAMPLES=ON \
      -DOpenMVG_BUILD_SOFTWARES=ON \
      -DSCHUR_SPECIALIZATIONS=OFF \
      -DTARGET_ARCHITECTURE=core \
      . $OPENMVG_SOURCE

script:
  - |
    # -j2 to limit GCC builds to a reduced number of thread for the virtual machine
    if [ "$TRAVIS_OS_NAME" = "osx" ] && (echo $CC | grep -qo gcc-) then
      echo 'filter out linker warnings to avoid travis log size limits'
      time make all -j 2 2>&1 | grep -v -e '^/var/folders/*' -e '^[[:space:]]*\.section' -e '^[[:space:]]*\^[[:space:]]*~*' | grep --color=always -i 'warning\|error\|$'
    else
      time make all -j 2
    fi
  - ctest -V
