." Text automatically generated by txt2man
.TH dgord 1 "August 03, 2010" "" "PT-Scotch user's manual"
.SH NAME
\fBdgord \fP- compute sparse matrix orderings of graphs in parallel
\fB
.SH SYNOPSIS
.nf
.fam C
\fBdgord\fP [\fIoptions\fP] [\fIgfile\fP] [\fIofile\fP] [\fIlfile\fP]
.fam T
.fi
.SH DESCRIPTION
The \fBdgord\fP program computes, in a parallel way, an ordering of a
Scotch source graph representing the pattern of some symmetric
sparse matrix.
.PP
Source graph file \fIgfile\fP is either a centralized graph file, or a set
of files representing fragments of a distributed graph. The resulting
ordering is stored in file \fIofile\fP. Eventual logging information (such
as the one produced by option \fB-v\fP) is sent to file \fIlfile\fP. When file
names are not specified, data is read from standard input and
written to standard output. Standard streams can also be explicitely
represented by a dash '-'.
.PP
When the proper libraries have been included at compile time, \fBdgord\fP
can directly handle compressed graphs, both as input and output. A
stream is treated as compressed whenever its name is postfixed with
a compressed file extension, such as in 'brol.grf.bz2' or '-.gz'. The
compression formats which can be supported are the bzip2 format
('.bz2'), the gzip format ('.gz'), and the lzma format ('.lzma', on
input only).
.PP
\fBdgord\fP bases on implementations of the MPI interface to spread work
across the processing elements. It is therefore not likely to be run
directly, but instead through some launcher command such as \fBmpirun\fP.
.SH OPTIONS
.TP
.B
\fB-c\fPopt
Choose default ordering strategy according to one or
several \fIoptions\fP among:
.RS
.TP
.B
b
enforce load balance as much as possible.
.TP
.B
q
privilege quality over speed (default).
.TP
.B
s
privilege speed over quality.
.TP
.B
t
enforce safety.
.TP
.B
x
enforce scalability.
.RE
.TP
.B
\fB-h\fP
Display some help.
.TP
.B
\fB-m\fP\fImfile\fP
Save column block mapping data to file \fImfile\fP. Mapping
data specifies, for each vertex, the index of the column
block to which this vertex belongs.
.TP
.B
\fB-o\fP\fIstrat\fP
Use parallel graph ordering strategy \fIstrat\fP (see
PT-Scotch user's manual for more information).
.TP
.B
\fB-r\fP\fIpnum\fP
Set root process for centralized files (default is 0).
.TP
.B
\fB-t\fP\fItfile\fP
Save partitioning tree data to file \fItfile\fP. Partitioning
tree data specifies, for each vertex, the index of the
first vertex of the parent block of the block to which
the vertex belongs. Altogether with the mapping data
provided in file \fImfile\fP, it allows one to rebuild the
separator tree of the nested dissection process.
.TP
.B
\fB-V\fP
Display program version and copyright.
.TP
.B
\fB-v\fP\fIverb\fP
Set verbose mode to \fIverb\fP. It is a set of one of more
characters which can be:
.RS
.TP
.B
s
strategy information.
.TP
.B
t
timing information.
.SH EXAMPLES
Run \fBdgord\fP on 5 processing elements to reorder matrix graph brol.grf
and save the resulting ordering to file brol.ord, using the default
sequential graph ordering strategy:
.PP
.nf
.fam C
    $ mpirun -np 5 dgord brol.grf brol.ord

.fam T
.fi
Run \fBdgord\fP on 5 processing elements to reorder the distributed matrix
stored on graph fragment files brol5-0.dgr to brol5-4.dgr, and save
the resulting ordering to file brol.ord (see \fBdgscat\fP(1) for an
explanation of the '%p' and '%r' sequences in names of distributed
graph fragments).
.PP
.nf
.fam C
    $ mpirun -np 5 dgord brol%p-%r.dgr brol.ord

.fam T
.fi
.SH SEE ALSO
\fBdgtst\fP(1), \fBdgscat\fP(1), \fBgmk_hy\fP(1), \fBgord\fP(1).
.PP
PT-Scotch user's manual.
.SH AUTHOR
Francois Pellegrini <francois.pellegrini@labri.fr>
