." Text automatically generated by txt2man
.TH dgmap 1 "August 03, 2010" "" "PT-Scotch user's manual"
.SH NAME
\fBdgmap, dgpart \fP- compute static mappings and partitions in parallel
\fB
.SH SYNOPSIS
.nf
.fam C
\fBdgmap\fP [\fIoptions\fP] [\fIgfile\fP] [\fItfile\fP] [\fImfile\fP] [\fIlfile\fP]
.PP
\fBdgpart\fP [\fIoptions\fP] [\fInparts\fP] [\fIgfile\fP] [\fImfile\fP] [\fIlfile\fP]
.fam T
.fi
.SH DESCRIPTION
The \fBdgmap\fP program computes, in a parallel way, a static mapping of a
source graph onto a target graph.
.PP
The \fBdgpart\fP program is a shortcut of \fBdgmap\fP for computing partitions
of a source graph.
.PP
Source graph file \fIgfile\fP is either a centralized graph file, or a set
of files representing fragments of a distributed graph. For \fBdgmap\fP,
the target architecture file \fItfile\fP describes either algorithmically-coded
topologies such as meshes and hypercubes, or decomposition-defined
architectures created by means of the \fBamk_grf\fP(1) program. See
\fBgmap\fP(1) for a description of target architectures. The resulting
mapping is stored in file \fImfile\fP. Eventual logging information (such
as the one produced by option \fB-v\fP) is sent to file \fIlfile\fP. When file
names are not specified, data is read from standard input and
written to standard output. Standard streams can also be explicitely
represented by a dash '-'.
.PP
When the proper libraries have been included at compile time, \fBdgmap\fP
and \fBdgpart\fP can directly handle compressed graphs, both as input and
output. A stream is treated as compressed whenever its name is
postfixed with a compressed file extension, such as
in 'brol.grf.bz2' or '-.gz'. The compression formats which can be
supported are the bzip2 format ('.bz2'), the gzip format ('.gz'),
and the lzma format ('.lzma', on input only).
.PP
\fBdgmap\fP and \fBdgpart\fP base on implementations of the MPI interface to
spread work across the processing elements. They are therefore not
likely to be run directly, but instead through some launcher command
such as \fBmpirun\fP.
.SH OPTIONS
.TP
.B
\fB-c\fPopt
Choose default mapping strategy according to one or
several \fIoptions\fP among:
.RS
.TP
.B
b
enforce load balance as much as possible.
.TP
.B
q
privilege quality over speed (default).
.TP
.B
s
privilege speed over quality.
.TP
.B
t
enforce safety.
.TP
.B
x
enforce scalability.
.RE
.TP
.B
\fB-h\fP
Display some help.
.TP
.B
\fB-m\fP\fIstrat\fP
Use parallel mapping strategy \fIstrat\fP (see
PT-Scotch user's manual for more information).
.TP
.B
\fB-r\fP\fIpnum\fP
Set root process for centralized files (default is 0).
.TP
.B
\fB-V\fP
Display program version and copyright.
.TP
.B
\fB-v\fP\fIverb\fP
Set verbose mode to \fIverb\fP. It is a set of one of more
characters which can be:
.RS
.TP
.B
m
mapping information.
.TP
.B
s
strategy information.
.TP
.B
t
timing information.
.SH NOTE
At the time being (version 5.1.0), \fBdgmap\fP cannot compute full static
mappings as \fBgmap\fP(1) does, but only partitions (that is, mappings
onto unweighted or weighted complete graphs). Target architectures
other than the 'cmplt' and 'wcmplt' ones will lead to an error
message.
.SH EXAMPLES
Run \fBdgpart\fP on 5 processing elements to compute a partition into 7
parts of graph brol.grf and save the resulting ordering to file brol.map.
.PP
.nf
.fam C
    $ mpirun -np 5 dgpart 7 brol.grf brol.map

.fam T
.fi
Run \fBdgpart\fP on 5 processing elements to partition into 7 parts the
distributed graph stored on graph fragment files brol5-0.dgr to
brol5-4.dgr, and save the resulting mapping to file brol.map (see
\fBdgscat\fP(1) for an explanation of the '%p' and '%r' sequences in names
of distributed graph fragments).
.PP
.nf
.fam C
    $ mpirun -np 5 dgpart 7 brol%p-%r.dgr brol.map

.fam T
.fi
.SH SEE ALSO
\fBdgtst\fP(1), \fBdgscat\fP(1), \fBamk_grf\fP(1), \fBacpl\fP(1), \fBgmap\fP(1), \fBgmtst\fP(1).
.PP
PT-Scotch user's manual.
.SH AUTHOR
Francois Pellegrini <francois.pellegrini@labri.fr>
